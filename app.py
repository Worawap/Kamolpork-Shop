import streamlit as st
import pandas as pd
import datetime
import streamlit.components.v1 as components

st.set_page_config(page_title="‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏£‡πâ‡∏≤‡∏ô", layout="centered")

st.markdown("""
    <h1 style='text-align: center; color: #FF4B4B;'>‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏£‡πâ‡∏≤‡∏ô - ‡∏Ç‡∏≤‡∏¢‡∏´‡∏°‡∏π‡∏´‡∏ô‡πâ‡∏≤‡∏£‡πâ‡∏≤‡∏ô</h1>
    <hr style='border:1px solid #FF4B4B;'>
""", unsafe_allow_html=True)

cash_types = [
    ("1,000 ‡∏ö‡∏≤‡∏ó", 1000),
    ("500 ‡∏ö‡∏≤‡∏ó", 500),
    ("100 ‡∏ö‡∏≤‡∏ó", 100),
    ("50 ‡∏ö‡∏≤‡∏ó", 50),
    ("20 ‡∏ö‡∏≤‡∏ó", 20),
    ("10 ‡∏ö‡∏≤‡∏ó (‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç)", 10),
    ("5 ‡∏ö‡∏≤‡∏ó (‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç)", 5),
    ("2 ‡∏ö‡∏≤‡∏ó (‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç)", 2),
    ("1 ‡∏ö‡∏≤‡∏ó (‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç)", 1)
]

initial_pork = pd.DataFrame({"No": [1], "‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£": [""], "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô": [0]})
initial_package = pd.DataFrame({"No": [1], "‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ö‡∏¥‡∏•": [""], "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô": [0]})
initial_drink = pd.DataFrame({"No": [1], "‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£": [""], "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô": [0]})
initial_waste = pd.DataFrame({"No": [1], "‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£": [""], "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô": [0]})
initial_cancel = pd.DataFrame({"No": [1], "‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£": [""], "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô": [0]})

if "pork_table" not in st.session_state:
    st.session_state["pork_table"] = initial_pork

if "package_table" not in st.session_state:
    st.session_state["package_table"] = initial_package

if "drink_table" not in st.session_state:
    st.session_state["drink_table"] = initial_drink

if "waste_table" not in st.session_state:
    st.session_state["waste_table"] = initial_waste

if "cancel_table" not in st.session_state:
    st.session_state["cancel_table"] = initial_cancel

if "next_page" not in st.session_state:
    st.session_state["next_page"] = False

if not st.session_state["next_page"]:
    st.markdown("<h3 style='color: #4CAF50;'>üìù ‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏ö‡∏á‡∏Ñ‡πå‡πÅ‡∏•‡∏∞‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç</h3>", unsafe_allow_html=True)

    with st.container():
        counts = {}
        for label, value in cash_types:
            counts[value] = st.number_input(f"{label}", min_value=0, step=1, key=f"cash_{value}")

    col1, col2 = st.columns(2)
    with col1:
        pos_cash_input = st.number_input("üíµ ‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö (‡∏à‡∏≤‡∏Å POS)", min_value=0, step=1)
    with col2:
        pos_transfer_input = st.number_input("üè¶ ‡πÄ‡∏á‡∏¥‡∏ô‡πÇ‡∏≠‡∏ô (‡∏à‡∏≤‡∏Å POS)", min_value=0, step=1)

    def section(title, table_key):
        st.markdown(f"<h4 style='color: #4CAF50;'>{title}</h4>", unsafe_allow_html=True)
        st.session_state[table_key] = st.data_editor(
            st.session_state[table_key],
            use_container_width=True,
            hide_index=True,
            num_rows="dynamic",
            key=f"{table_key}_editor",
            disabled=False
        )
        if not st.session_state[table_key].empty:
            total = st.session_state[table_key]["‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô"].sum()
        else:
            total = 0
        st.markdown(f"‡∏£‡∏ß‡∏°‡∏¢‡∏≠‡∏î {title}: {total:,} ‡∏ö‡∏≤‡∏ó")
        return total

    pork_total = section("ü•© ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏´‡∏°‡∏π‡∏´‡∏°‡∏±‡∏Å", "pork_table")
    package_total = section("üì¶ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ñ‡∏∏‡∏á/‡∏™‡∏ï‡∏¥‡πä‡∏Å‡πÄ‡∏Å‡∏≠‡∏£‡πå/‡∏Ç‡∏≠‡∏á‡πÅ‡∏õ‡∏£‡∏£‡∏π‡∏õ/‡πÅ‡∏´‡∏ô‡∏°", "package_table")
    drink_total = section("ü•§ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡∏∑‡πà‡∏°/‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏õ‡∏£‡∏∏‡∏á", "drink_table")
    waste_total = section("üì¶ ‡∏ö‡∏¥‡∏•‡∏Ç‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢", "waste_table")
    cancel_total = section("üßæ ‡∏ö‡∏¥‡∏•‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å", "cancel_table")

    total_amount = sum([value * count for value, count in counts.items()])
    pos_total = pos_cash_input + pos_transfer_input

    st.markdown(f"""
    <div style='padding:10px; background-color:#E0F7FA; color:#006064; border-radius:8px; text-align:center;'>
        <h4>üí∞ ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡πÅ‡∏ö‡∏á‡∏Ñ‡πå‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç: {total_amount:,} ‡∏ö‡∏≤‡∏ó</h4>
        <h4>üí≥ ‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏ß‡∏° (‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î + ‡πÇ‡∏≠‡∏ô): {pos_total:,} ‡∏ö‡∏≤‡∏ó</h4>
    </div>
    """, unsafe_allow_html=True)

    st.markdown("""
    <div style='text-align:center; padding-top:10px;'>
        <button style='background-color:#4CAF50; color:white; padding:12px 32px; font-size:18px; border:none; border-radius:8px; cursor:pointer;'>‚úÖ ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô</button>
    </div>
    """, unsafe_allow_html=True)

    if st.button("‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô", key="next_button"):
        st.session_state.update({
            "counts": counts,
            "total_amount": total_amount,
            "pos_cash": pos_cash_input,
            "pos_transfer": pos_transfer_input,
            "cash_in_drawer": total_amount,
            "pork_marinated": pork_total,
            "processed_goods": package_total,
            "drinks_seasoning": drink_total,
            "waste_bills": waste_total,
            "cancel_bills": cancel_total,
            "next_page": True
        })
else:
    st.markdown("""
        <h2 style='color: #4CAF50;'>üíµ ‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô</h2>
        <p>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô‡πÉ‡∏´‡πâ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô...</p>
    """, unsafe_allow_html=True)
