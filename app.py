import streamlit as st
import pandas as pd
import datetime

st.set_page_config(page_title="‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏£‡πâ‡∏≤‡∏ô", layout="centered")

st.markdown("""
    <h1 style='text-align: center; color: #FF4B4B;'>‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏£‡πâ‡∏≤‡∏ô - ‡∏Ç‡∏≤‡∏¢‡∏´‡∏°‡∏π‡∏´‡∏ô‡πâ‡∏≤‡∏£‡πâ‡∏≤‡∏ô</h1>
    <hr style='border:1px solid #FF4B4B;'>
""", unsafe_allow_html=True)

cash_types = [
    ("1,000 ‡∏ö‡∏≤‡∏ó", 1000),
    ("500 ‡∏ö‡∏≤‡∏ó", 500),
    ("100 ‡∏ö‡∏≤‡∏ó", 100),
    ("50 ‡∏ö‡∏≤‡∏ó", 50),
    ("20 ‡∏ö‡∏≤‡∏ó", 20),
    ("10 ‡∏ö‡∏≤‡∏ó (‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç)", 10),
    ("5 ‡∏ö‡∏≤‡∏ó (‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç)", 5),
    ("2 ‡∏ö‡∏≤‡∏ó (‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç)", 2),
    ("1 ‡∏ö‡∏≤‡∏ó (‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç)", 1)
]

with st.form("cash_input_form"):
    st.markdown("<h3 style='color: #4CAF50;'>üìù ‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏ö‡∏á‡∏Ñ‡πå‡πÅ‡∏•‡∏∞‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç</h3>", unsafe_allow_html=True)

    counts = {}
    for label, value in cash_types:
        with st.container():
            cols = st.columns([2, 1, 1])
            with cols[0]:
                st.markdown(f"<div style='padding-top: 8px; font-size:18px; color: #333;'>{label}</div>", unsafe_allow_html=True)
            with cols[1]:
                count = st.number_input("", min_value=0, step=1, key=f"count_{value}")
                counts[value] = count

    submitted = st.form_submit_button("‚úÖ ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô")

if submitted:
    total_amount = sum([value * count for value, count in counts.items()])

    st.success(f"‚úÖ ‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î‡∏£‡∏ß‡∏°: {total_amount:,.0f} ‡∏ö‡∏≤‡∏ó")

    def calculate_change(target, counts_available):
        change_counts = {}
        remaining = target
        available = counts_available.copy()

        for value in sorted(available.keys()):
            while available[value] > 0 and remaining >= value:
                available[value] -= 1
                change_counts[value] = change_counts.get(value, 0) + 1
                remaining -= value

        if remaining == 0:
            return change_counts
        else:
            return None

    change_result = calculate_change(4000, counts)

    if change_result:
        st.success("üí∞ ‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÑ‡∏ß‡πâ 4,000 ‡∏ö‡∏≤‡∏ó ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")

        change_df = pd.DataFrame([
            {"‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó": f"{value} ‡∏ö‡∏≤‡∏ó", "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠": count}
            for value, count in change_result.items()
        ])
        st.dataframe(change_df, use_container_width=True)

        send_back = {}
        for value in counts:
            qty_after_change = counts[value] - change_result.get(value, 0)
            if qty_after_change > 0:
                send_back[value] = qty_after_change

        send_back_df = pd.DataFrame([
            {"‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó": f"{value} ‡∏ö‡∏≤‡∏ó", "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö": count}
            for value, count in send_back.items()
        ])

        st.markdown("<h3 style='color: #2196F3;'>üìã ‡∏™‡∏£‡∏∏‡∏õ‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó</h3>", unsafe_allow_html=True)
        st.dataframe(send_back_df, use_container_width=True)

        st.markdown("<h3 style='color: #9C27B0;'>üìã ‡∏Å‡∏£‡∏≠‡∏Å‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡πÇ‡∏≠‡∏ô ‡πÅ‡∏•‡∏∞‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö POS</h3>", unsafe_allow_html=True)

        col_input1, col_input2 = st.columns(2)
        with col_input1:
            pos_cash = st.number_input("‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏ö POS ‡πÅ‡∏à‡πâ‡∏á‡∏°‡∏≤", min_value=0, step=1)
        with col_input2:
            pos_transfer = st.number_input("‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡πÇ‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏ö POS ‡πÅ‡∏à‡πâ‡∏á‡∏°‡∏≤", min_value=0, step=1)

        if st.button("üìä ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏™‡∏£‡∏∏‡∏õ‡∏¢‡∏≠‡∏î"):
            money_left_in_drawer = total_amount
            total_sale = money_left_in_drawer + sum([v * c for v, c in send_back.items()])
            cash_received = sum([v * send_back[v] for v in send_back]) - 4000
            cash_transfer = pos_transfer
            difference = (cash_received + cash_transfer) - total_sale

            summary = pd.DataFrame({
                "‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠": [
                    "‡∏¢‡∏≠‡∏î‡∏™‡πà‡∏á‡πÄ‡∏á‡∏¥‡∏ô", "‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÉ‡∏ô‡∏•‡∏¥‡πâ‡∏ô‡∏ä‡∏±‡∏Å", "‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏ß‡∏°", "‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö", "‡πÄ‡∏á‡∏¥‡∏ô‡πÇ‡∏≠‡∏ô", "‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô", "‡πÄ‡∏á‡∏¥‡∏ô‡∏Ç‡∏≤‡∏î/‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏Å‡∏¥‡∏ô"
                ],
                "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô": [
                    cash_received, money_left_in_drawer, total_sale, pos_cash, cash_transfer, 4000, difference
                ],
                "‡∏´‡∏ô‡πà‡∏ß‡∏¢": ["‡∏ö‡∏≤‡∏ó"]*7
            })

            st.markdown("<h3 style='color: #795548;'>üìë ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì</h3>", unsafe_allow_html=True)
            st.dataframe(summary, use_container_width=True)

    if st.button("üìÇ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏ü‡∏•‡πå CSV"):
        today = datetime.date.today().strftime("%Y-%m-%d")
        filename = f"cash_report_{today}.csv"

        final_df = pd.concat([
            pd.DataFrame([{"‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó": "‡∏£‡∏ß‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î", "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô": total_amount}]),
            pd.DataFrame([{"‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó": "‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô 4000 ‡∏ö‡∏≤‡∏ó", "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô": 4000}]),
            pd.DataFrame([{"‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó": "‡∏ï‡πâ‡∏≠‡∏á‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö", "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô": total_amount - 4000}]),
            pd.DataFrame([{"‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó": "-", "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô": "-"}]),
            send_back_df
        ])

        final_df.to_csv(filename, index=False, encoding='utf-8-sig')
        st.success(f"üìÇ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢: {filename}")

    else:
        st.error("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏à‡∏±‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö 4,000 ‡∏ö‡∏≤‡∏ó‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏ö‡∏á‡∏Ñ‡πå/‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á!")
        st.stop()
