import streamlit as st
import pandas as pd
import datetime
import streamlit.components.v1 as components

st.set_page_config(page_title="‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏£‡πâ‡∏≤‡∏ô", layout="centered")

st.markdown("""
    <h1 style='text-align: center; color: #FF4B4B;'>‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏£‡πâ‡∏≤‡∏ô - ‡∏Ç‡∏≤‡∏¢‡∏´‡∏°‡∏π‡∏´‡∏ô‡πâ‡∏≤‡∏£‡πâ‡∏≤‡∏ô</h1>
    <hr style='border:1px solid #FF4B4B;'>
""", unsafe_allow_html=True)

cash_types = [
    ("1,000 ‡∏ö‡∏≤‡∏ó", 1000),
    ("500 ‡∏ö‡∏≤‡∏ó", 500),
    ("100 ‡∏ö‡∏≤‡∏ó", 100),
    ("50 ‡∏ö‡∏≤‡∏ó", 50),
    ("20 ‡∏ö‡∏≤‡∏ó", 20),
    ("10 ‡∏ö‡∏≤‡∏ó (‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç)", 10),
    ("5 ‡∏ö‡∏≤‡∏ó (‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç)", 5),
    ("2 ‡∏ö‡∏≤‡∏ó (‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç)", 2),
    ("1 ‡∏ö‡∏≤‡∏ó (‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç)", 1)
]

if "cash_editor" not in st.session_state:
    st.session_state["cash_editor"] = pd.DataFrame({
        "‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó": [label for label, _ in cash_types],
        "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô": [0 for _ in cash_types]
    })

if "pork_table" not in st.session_state:
    st.session_state["pork_table"] = pd.DataFrame({"No": [1], "‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£": [""], "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô": [0]})

if "package_table" not in st.session_state:
    st.session_state["package_table"] = pd.DataFrame({"No": [1], "‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ö‡∏¥‡∏•": [""], "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô": [0]})

if "drink_table" not in st.session_state:
    st.session_state["drink_table"] = pd.DataFrame({"No": [1], "‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£": [""], "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô": [0]})

if "waste_bills" not in st.session_state:
    st.session_state["waste_bills"] = [0 for _ in range(5)]

if "cancel_bills" not in st.session_state:
    st.session_state["cancel_bills"] = [0 for _ in range(5)]

if "next_page" not in st.session_state:
    st.session_state["next_page"] = False

if not st.session_state["next_page"]:
    st.markdown("<h3 style='color: #4CAF50;'>üìù ‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏ö‡∏á‡∏Ñ‡πå‡πÅ‡∏•‡∏∞‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç</h3>", unsafe_allow_html=True)

    edited_cash_df = st.data_editor(
        st.session_state["cash_editor"],
        use_container_width=True,
        hide_index=True,
        num_rows="fixed",
        key="cash_editor_editor"
    )

    st.session_state["cash_editor"] = edited_cash_df

    col1, col2 = st.columns(2)
    with col1:
        pos_cash_input = st.number_input("üíµ ‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö (‡∏à‡∏≤‡∏Å POS)", min_value=0, step=1)
    with col2:
        pos_transfer_input = st.number_input("üè¶ ‡πÄ‡∏á‡∏¥‡∏ô‡πÇ‡∏≠‡∏ô (‡∏à‡∏≤‡∏Å POS)", min_value=0, step=1)

    st.markdown("<h4 style='color: #4CAF50;'>üçñ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏´‡∏°‡∏π‡∏´‡∏°‡∏±‡∏Å</h4>", unsafe_allow_html=True)
    st.session_state["pork_table"] = st.data_editor(
        st.session_state["pork_table"],
        use_container_width=True,
        key="pork_table_editor"
    )

    pork_total = st.session_state["pork_table"]["‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô"].sum() if not st.session_state["pork_table"].empty else 0
    st.markdown(f"‡∏£‡∏ß‡∏°‡∏¢‡∏≠‡∏î‡∏´‡∏°‡∏π‡∏´‡∏°‡∏±‡∏Å: {pork_total} ‡∏ö‡∏≤‡∏ó")

    st.markdown("<h4 style='color: #4CAF50;'>üì¶ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ñ‡∏∏‡∏á/‡∏™‡∏ï‡∏¥‡πä‡∏Å‡πÄ‡∏Å‡∏≠‡∏£‡πå/‡∏Ç‡∏≠‡∏á‡πÅ‡∏õ‡∏£‡∏£‡∏π‡∏õ/‡πÅ‡∏´‡∏ô‡∏°</h4>", unsafe_allow_html=True)
    st.session_state["package_table"] = st.data_editor(
        st.session_state["package_table"],
        use_container_width=True,
        key="package_table_editor"
    )

    package_total = st.session_state["package_table"]["‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô"].sum() if not st.session_state["package_table"].empty else 0
    st.markdown(f"‡∏£‡∏ß‡∏°‡∏¢‡∏≠‡∏î‡∏ñ‡∏∏‡∏á/‡∏Ç‡∏≠‡∏á‡πÅ‡∏õ‡∏£‡∏£‡∏π‡∏õ/‡πÅ‡∏´‡∏ô‡∏°: {package_total} ‡∏ö‡∏≤‡∏ó")

    st.markdown("<h4 style='color: #4CAF50;'>ü•§ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡∏∑‡πà‡∏°/‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏õ‡∏£‡∏∏‡∏á</h4>", unsafe_allow_html=True)
    st.session_state["drink_table"] = st.data_editor(
        st.session_state["drink_table"],
        use_container_width=True,
        key="drink_table_editor"
    )

    drink_total = st.session_state["drink_table"]["‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô"].sum() if not st.session_state["drink_table"].empty else 0
    st.markdown(f"‡∏£‡∏ß‡∏°‡∏¢‡∏≠‡∏î‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡∏∑‡πà‡∏°/‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏õ‡∏£‡∏∏‡∏á: {drink_total} ‡∏ö‡∏≤‡∏ó")

    st.markdown("<h4 style='color: #4CAF50;'>üì¶ ‡∏ö‡∏¥‡∏•‡∏Ç‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢</h4>", unsafe_allow_html=True)
    waste_bills = [st.number_input(f"‡∏Ç‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢ {i+1}", min_value=0, step=1, key=f"waste_{i}") for i in range(5)]

    st.markdown("<h4 style='color: #4CAF50;'>üßæ ‡∏ö‡∏¥‡∏•‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</h4>", unsafe_allow_html=True)
    cancel_bills = [st.number_input(f"‡∏ö‡∏¥‡∏•‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å {i+1}", min_value=0, step=1, key=f"cancel_{i}") for i in range(5)]

    counts = dict(zip([value for _, value in cash_types], st.session_state["cash_editor"]["‡∏à‡∏≥‡∏ô‡∏ß‡∏ô"]))
    total_amount = sum([value * count for value, count in counts.items()])
    pos_total = pos_cash_input + pos_transfer_input

    st.markdown(f"""
    <div style='padding:10px; background-color:#E0F7FA; color:#006064; border-radius:8px; text-align:center;'>
        <h4>üí∞ ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡πÅ‡∏ö‡∏á‡∏Ñ‡πå‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç: {total_amount:,} ‡∏ö‡∏≤‡∏ó</h4>
        <h4>üí≥ ‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏ß‡∏° (‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î + ‡πÇ‡∏≠‡∏ô): {pos_total:,} ‡∏ö‡∏≤‡∏ó</h4>
    </div>
    """, unsafe_allow_html=True)

    if st.button("‚úÖ ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô"):
        st.session_state.update({
            "counts": counts,
            "total_amount": total_amount,
            "pos_cash": pos_cash_input,
            "pos_transfer": pos_transfer_input,
            "cash_in_drawer": total_amount,
            "pork_marinated": pork_total,
            "processed_goods": package_total,
            "drinks_seasoning": drink_total,
            "waste_bills": waste_bills,
            "cancel_bills": cancel_bills,
            "next_page": True
        })
